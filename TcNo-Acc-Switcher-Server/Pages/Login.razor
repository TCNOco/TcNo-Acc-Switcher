@*TcNo Account Switcher - A Super fast account switcher
    Copyright (C) 2019-2022 TechNobo (Wesley Pyburn)
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses />.*@

@page "/login"
@attribute [AllowAnonymous]
@using TcNo_Acc_Switcher_Globals
@using TcNo_Acc_Switcher_Server.State
@using TcNo_Acc_Switcher_Server.State.DataTypes
@using TcNo_Acc_Switcher_Server.State.Interfaces
@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager
@inject IAppState AppState
@inject IWindowSettings WindowSettings
@inject ILang Lang
@inject Toasts Toasts

<div class="container mainblock">
    <div class="row">
        <div class="col-md-12 col-lg-9 col-xl-8 mx-auto settingsCol">
            <h1 class="SettingsHeader">@Lang["Locked"]</h1>
            <p>@Lang["Auth_LoginRequired"]</p>
            <div class="form-text"><span>@Lang["Auth_EnterPassword"]</span><input type="password" id="password" @bind="_password" spellcheck="false"></div>
            <div class="buttoncol">
                <button class="btn_login btn_app_login" id="btnLogin" type="button" @onclick="CheckPassword">
                    <span>@Lang["Button_Login"]</span>
                    <i class="fas fa-caret-right footerIcoInline"></i>
                </button>
            </div>
            <br/>
            <h2 class="mt-5">TcNo Account Switcher</h2>
            <div class="linksList">
                <a onclick="OpenLinkInBrowser('https://github.com/TcNobo/TcNo-Acc-Switcher');return false;" href="">
                    <svg viewBox="0 0 24 24" draggable="false" alt="GitHub" class="modalIcoGitHub"><use href="img/icons/ico_github.svg#icoGitHub"></use></svg>
                    @Lang["Modal_Info_ViewGitHub"]
                </a>
                <a onclick="OpenLinkInBrowser('https://s.tcno.co/AccSwitcherDiscord');return false;" href="">
                    <svg viewBox="0 0 24 24" draggable="false" alt="Discord" class="modalIcoDiscord"><use href="img/icons/ico_discord.svg#icoDiscord"></use></svg>
                    @Lang["Modal_Info_BugReport"]
                </a>
                <a onclick="OpenLinkInBrowser('https://tcno.co');return false;" href="">
                    <svg viewBox="0 0 24 24" draggable="false" alt="Website" class="modalIcoNetworking"><use href="img/icons/ico_networking.svg#icoNetworking"></use></svg>
                    @Lang["Modal_Info_VisitSite"]
                </a>
                <a onclick="OpenLinkInBrowser('https://github.com/TcNobo/TcNo-Acc-Switcher/blob/master/DISCLAIMER.md');return false;" href="">
                    <svg viewBox="0 0 2084 2084" draggable="false" alt="GitHub" class="modalIcoDoc"><use href="img/icons/ico_doc.svg#icoDoc"></use></svg>
                    @Lang["Modal_Info_Disclaimer"]
                </a>
            </div>
            <div class="mt-2"><span>@Lang["Modal_Info_Version"]: @Globals.Version</span></div>
        </div>
    </div>
</div>


@code
{
    [Parameter]
    [SupplyParameterFromQuery(Name = "returnUrl")]
    public string ReturnUrl { get; set; } = "/";

    private string _password = "";

    private void CheckPassword()
    {
        AppState.PasswordCurrent = Globals.GetSha256HashString(_password);
        if (AppState.PasswordCurrent == WindowSettings.PasswordHash)
            NavManager.NavigateTo(ReturnUrl); // Success! Redirect user back.
        else
            Toasts.ShowToastLang(ToastType.Error, "Fast Message", "Auth_PassIncorrect");
    }

	// This is run before everything is painted on, so that it can get the correct values for the CSS Block.
	protected override void OnParametersSet()
	{
	}

	protected override void OnAfterRender(bool firstRender)
	{
		AppState.WindowState.WindowTitle = Lang["Title_Login"];
	}
}
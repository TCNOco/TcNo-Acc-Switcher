@*TcNo Account Switcher - A Super fast account switcher
    Copyright (C) 2019-2022 TechNobo (Wesley Pyburn)
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses />.*@

@page "/"
@using TcNo_Acc_Switcher_Server.Data
@using TcNo_Acc_Switcher_Server.Pages.General
@using System.Globalization
@using System.IO
@using TcNo_Acc_Switcher_Globals
@using TcNo_Acc_Switcher_Server.Shared.ContextMenu
@inject IJSRuntime JsRuntime
@{ AData.SetActiveIJsRuntime(JsRuntime); }
@inject NavigationManager NavManager
@{ AData.SetActiveNavMan(NavManager); }
@inject AppData AData

@inject Lang Locale

@if (AppSettings.PreRenderUpdate)
{
    <div class="updateBar">
        <span>@Locale["Update"]</span>
        <i class="fas fa-times-circle" id="closeUpdateBar"></i>
    </div>
}

<ContextMenu MenuItems="@AppSettings.PlatformContextMenuItems" ContextMenuId="AccOrPlatList" />
<div class="platformTable">
    <div class="platform_list">
        @foreach (var platform in AData.SortedPlatformListHandleDisabled())
        {
            <div class="platform_list_item" id="@(platform)" @onclick="() => Check(platform)">
                <div class="fgText @(!File.Exists(Path.Join(Globals.UserDataFolder, $"wwwroot/img/platform/{BasicPlatforms.PlatformSafeName(platform)}.svg")) ? "noImageCenterText" : "") @(BasicPlatforms.PlatformFullName(platform).Length < 7 ? "shortText" : BasicPlatforms.PlatformFullName(platform).Length > 12 ? "longText" : "")"><p>@BasicPlatforms.PlatformFullName(platform).ToUpper(CultureInfo.InvariantCulture)</p></div>
                <div class="fgImg">
                    @if(File.Exists(Path.Join(Globals.UserDataFolder, $"wwwroot/img/platform/{BasicPlatforms.PlatformSafeName(platform)}.svg")))
                    {
                        <svg viewBox="0 0 500 500" draggable="false" alt="@(BasicPlatforms.PlatformSafeName(platform))">
                            <use href="@($"img/platform/{BasicPlatforms.PlatformSafeName(platform)}.svg#FG")" class="@("icoFG")"></use>
                        </svg>
                    }
                </div>
                <svg viewBox="0 0 2084 2084" draggable="false" alt="@(platform)" class="@("icoBG")">
                    <use href="img/platform/glass.svg#GLASS" class="icoGlass @("icoGlass")"></use>
                </svg>
            </div>
        }
    </div>
</div>

<div class="acc_list_actionbar">
    <div>
        @*<button id="btnTextEditor" onclick="location = 'TextEditor'">
            <i class="fas fa-cog footerIcoSettings"></i>
        </button>*@
        @if (BasicPlatforms.PlatformDict.Count > 0)
        {
            <button id="btnPlatforms" onclick="location = 'Platforms'" data-toggle="tooltip" title="@(Locale["Tooltip_ManagePlatforms"])">
                <i class="fas fa-plus footerIcoInline"></i>
                @Lang["Button_ManagePlatforms"]
            </button>
        }
        <button class="btnSettings" onclick="location = 'Settings'" data-toggle="tooltip" title="@(Locale["Tooltip_Settings"])">
            <i class="fas fa-cog footerIcoSettings"></i>
        </button>
        <button class="btnHelp" onclick="showModal('info');" data-toggle="tooltip" title="@(Locale["Tooltip_Info"])">
            <i class="fas fa-question footerIcoQuestion"></i>
        </button>
    </div>
</div>

@code
{
	// This is run before everything is painted on, so that it can get the correct values for the CSS Block.
	protected override void OnParametersSet()
	{
	}

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        AppData.WindowTitle = "TcNo Account Switcher";

    // If no platforms are showing:
        if (!AData.AnyPlatformsShowing())
        {
            NavManager.NavigateTo("Platforms");
        }

    // If just 1 platform is showing, and first launch: Nav into:
        if (AppData.FirstMainMenuVisit && AData.SortedPlatformListHandleDisabled().Count == 1)
        {
            AppData.FirstMainMenuVisit = false;
            var onlyPlatform = AData.SortedPlatformListHandleDisabled().First();
            await Check(onlyPlatform);
        }
        AppData.FirstMainMenuVisit = false;

        if (firstRender)
        {
            await GeneralFuncs.HandleQueries();
            //await AppData.InvokeVoidAsync("initContextMenu");
            await AppData.InvokeVoidAsync("initPlatformListSortable");
            //await AData.InvokeVoidAsync("initAccListSortable");
        }

        AppData.FirstLaunchCheck();

        AppStats.NewNavigation("/");
    }
}
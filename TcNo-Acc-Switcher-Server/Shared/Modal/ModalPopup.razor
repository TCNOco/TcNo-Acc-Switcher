@*TcNo Account Switcher - A Super fast account switcher
    Copyright (C) 2019-2022 TechNobo (Wesley Pyburn)
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses />.*@

@using TcNo_Acc_Switcher_Server.Shared.Modal
@using TcNo_Acc_Switcher_Server.Shared.Modal.Modals
@using TcNo_Acc_Switcher_Server.Data
@using System.Collections.ObjectModel

@inject IJSRuntime JsRuntime
@inject AppData AData
@inject Lang Locale

<div class="modalBG" onclick="if (event.target === this)$('.modalBG').fadeOut();" style="display: none;">
@*<div class="modalBG" onclick="if (event.target === this)$('.modalBG').fadeOut();" style="display: none;">*@
    <div class="modalFG">
        <div id="window-title-modal">
            <button id="modalBtnBack" style="display: none">
                <i class="fas fa-chevron-left icon" style="transition: transform 500ms ease-in-out" draggable="false" alt="-"></i>
            </button>
            <svg draggable="false" class="modal_header_icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 768 264" fill-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="2">
                <use href="img/TcNo_Logo_Flat.svg#logo"></use>
            </svg>
            <span id="modalTitle">@ModalData.Title</span>
            <div id="window-controls-modal">
                <button id="btnClose-modal" @onclick="() => ModalData.IsShown = false">
                    <i class="fas fa-times" draggable="false"></i>
                </button>
            </div>
        </div>
        <div id="modal_contents">
            @switch (ModalData.Type)
            {
                case "info":
                    <ModalInfo />
                    break;
                case "crowdin":
                    <ModalCrowdin />
                    break;
                case "notes":
                    <ModalAccountNotes />
                    break;
                case "changeUsername":
                    <ModalChangeUsername />
                    break;
                case "showStats":
                    <ModalStats />
                    break;
                case "confirm":
                    @* For forgetting accounts, clearing stats & restarting as Admin *@
                    <ModalConfirmAction />
                    break;
                case "find":
                    @* For locating platform EXEs as well as AnyFile and AnyFolder locations *@
                    <ModalPathPicker />
                    break;
            }





        </div>
    </div>
</div>

@code
{
    protected override void OnInitialized()
    {
        ModalData.Instance.OnChange += OnChangeHandler;
    }
    private async void OnChangeHandler()
    {
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ModalData.Instance.OnChange -= OnChangeHandler;
    }

}

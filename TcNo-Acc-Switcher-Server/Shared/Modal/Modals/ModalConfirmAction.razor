@*TcNo Account Switcher - A Super fast account switcher
    Copyright (C) 2019-2022 TechNobo (Wesley Pyburn)
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses />.*@

@using TcNo_Acc_Switcher_Server.Shared.Modal
@using TcNo_Acc_Switcher_Server.Data
@using TcNo_Acc_Switcher_Globals
@using TcNo_Acc_Switcher_Server.Data.Settings
@using TcNo_Acc_Switcher_Server.Pages.General
@using Newtonsoft.Json
@using System.IO
@using System.Text.RegularExpressions
@using TcNo_Acc_Switcher_Server.Pages.Basic
@using TcNo_Acc_Switcher_Server.Pages.Steam
@using System.Configuration
@inject ILang Lang
@inject IModalData ModalData
@inject IAppData AppData
@inject IAppSettings AppSettings
@inject IAppStats AppStats
@inject IGeneralFuncs GeneralFuncs
@inject IBasic Basic
@inject ISteam Steam
@inject IAppFuncs AppFuncs

@code {
    private MarkupString _message = new();
    protected override void OnInitialized()
    {
        ModalData.Title = Lang["Modal_Title_ConfirmAction"];

        _message = ModalData.ExtraArgs switch
        {
            ExtraArg.ForgetAccount => AppData.CurrentSwitcher == "Steam"
                ? new MarkupString(Lang["Prompt_ForgetSteam"])
                : new MarkupString(Lang["Prompt_ForgetAccount"]),
            ExtraArg.ClearStats => new MarkupString(Lang["Prompt_ClearStats"]),
            ExtraArg.RestartAsAdmin => new MarkupString(Lang["Prompt_RestartAsAdmin"]),
            _ => _message
            };
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await AppData.InvokeVoidAsync("focusOn", "#modal_false");
    }
}

<div class="infoWindow">
    <div class="fullWidthContent"><h3>@Lang["Modal_ConfirmAction"]:</h3> @_message
        <div class="YesNo">
            @if (ModalData.ExtraArgs == ExtraArg.RestartAsAdmin)
            {
                <button type="button" id="modal_true" @onclick="ButtonOk"><span>@Lang["Ok"]</span></button>
                <br />
                <br />
                <div class="form-check"><input class="form-check-input" type="checkbox" id="AlwaysAdmin" @bind="AppSettings.AlwaysAdmin" @onclick="AlwaysAdminClicked"><label class="form-check-label" for="AlwaysAdmin"></label></div><label for="AlwaysAdmin">@Lang["Settings_AlwaysAdmin"]<br></label>
            }
            else
            {
                <button type="button" id="modal_true" @onclick="ButtonYes"><span>@Lang["Yes"]</span></button>
                <button type="button" id="modal_false" @onclick="ButtonNo"><span>@Lang["No"]</span></button>
            }
        </div>
    </div>
</div>

@code
{
    private void AlwaysAdminClicked()
    {
        AppSettings.AlwaysAdmin = !AppSettings.AlwaysAdmin;
        AppSettings.SaveSettings();
    }

    private async Task ButtonYes()
    {
        switch (ModalData.ExtraArgs)
        {
            case ExtraArg.ForgetAccount:
            {
                if (AppData.CurrentSwitcher == "Steam")
                {
                    Steam.ForgetAccountEnabled = true;
                    Steam.SaveSettings();
                }
                else
                {
                    Basic.ForgetAccountEnabled = true;
                    Basic.SaveSettings();
                }

                await AppFuncs.ForgetAccount();
                break;
            }
            case ExtraArg.ClearStats:
                AppStats.ClearStats();
                break;
        }

        await GeneralFuncs.ShowToast("success", "Success", renderTo: "toastarea");
        //AppData.Instance.NotifyDataChanged();
        ModalData.IsShown = false;
        ModalData.ExtraArgs = ExtraArg.None;
    }

    private void ButtonOk()
    {
        if (ModalData.ExtraArgs == ExtraArg.RestartAsAdmin)
        {
            GeneralFuncs.RestartAsAdmin();
        }


        ModalData.IsShown = false;
        ModalData.ExtraArgs = ExtraArg.None;
    }

    private void ButtonNo()
    {
        ModalData.IsShown = false;
        ModalData.ExtraArgs = ExtraArg.None;
    }
}

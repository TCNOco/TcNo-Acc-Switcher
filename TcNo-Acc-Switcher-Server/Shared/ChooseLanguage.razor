@*TcNo Account Switcher - A Super fast account switcher
    Copyright (C) 2019-2022 TechNobo (Wesley Pyburn)
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses />.*@

@using TcNo_Acc_Switcher_Server.Data
@using TcNo_Acc_Switcher_Server.Pages.General
@using System.Globalization
@inject NavigationManager NavigationManager
@inject ILang Lang
@inject IModalData ModalData
@inject IAppSettings AppSettings
@inject IAppData AppData
@inject IGeneralFuncs GeneralFuncs

@if (_cultures != null)
{
	<span>@Lang["Header_ChooseLanguage"]</span>
	<div class="dropdown">
		<ul class="custom-dropdown-menu dropdown-menu">
			@foreach (var (key, value) in _cultures)
			{
				<li class="custom-dropdown-item dropdown-item" @onclick="() => RequestCultureChange(value)">@value - @key</li>
			}
		</ul>
		<button class="dropdown-toggle" type="button" data-toggle="dropdown">
			@_selectedCulture
			<span class="caret"></span>
		</button>
		&nbsp;<a class="fancyLink" @onclick='() => { Data.GeneralFuncs.OpenLinkInBrowser("https://crowdin.com/project/tcno-account-switcher"); }'>@Lang["Settings_HelpTranslate"]</a>
		&nbsp;<a class="fancyLink" @onclick='() => ModalData.ShowModal("crowdin")'>@Lang["Settings_ViewTranslators"]</a>
	</div>
}

@code {
	private string _selectedCulture;
	private Dictionary<string, string> _cultures;

	protected override void OnInitialized()
	{
        _selectedCulture = Lang.GetCurrentLanguage().Key;
        _cultures = Lang.GetAvailableLanguagesDict();
	}

	private async Task RequestCultureChange(string key)
	{
		if (string.IsNullOrWhiteSpace(key)) return;
	    await Lang.LoadLang(key);
	    AppSettings.Rtl = new CultureInfo(Lang.Current).TextInfo.IsRightToLeft;
		AppData.ReloadPage();
	}
}
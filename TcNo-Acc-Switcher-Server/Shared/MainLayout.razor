@*TcNo Account Switcher - A Super fast account switcher
    Copyright (C) 2019-2022 TechNobo (Wesley Pyburn)
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses />.*@

@inherits LayoutComponentBase

@using TcNo_Acc_Switcher_Server.Data
@using TcNo_Acc_Switcher_Server.Shared.Modal
@using Newtonsoft.Json
@using TcNo_Acc_Switcher_Server.Shared.Toast
@using TcNo_Acc_Switcher_Server.Shared.Stylesheet
@using TcNo_Acc_Switcher_Server.State.Interfaces
@inject IJSRuntime JsRuntime
@{ AData.SetActiveIJsRuntime(JsRuntime); }
@inject NavigationManager NavManager
@{ AData.SetActiveNavMan(NavManager); }
@inject AppData AData
@inject AppSettings ASettings
@inject IStylesheetSettings StylesheetSettings

<app @onmouseup="MouseUp">
    <div class="headerbar">
        <Headerbar />
    </div>
    <div class="resizeLeft"></div>
    <div class="resizeRight"></div>
    <div class="resizeBottom"></div>
    <div class="resizeBottomRight"></div>
    <div class="resizeBottomLeft"></div>
    <div class="programMain">
        <ModalPopup />
        @Body
    </div>
    <DynamicStylesheet />
</app>
<ToastArea />
@code{
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (AppSettings.Instance.PasswordHash != "" && AppSettings.Instance.PasswordCurrent != AppSettings.Instance.PasswordHash)
        {
            if (!NavManager.Uri.Contains("/login")) NavManager.NavigateTo($"/login?returnUrl={Uri.EscapeDataString(NavManager.Uri)}");
        }
    }

    private static void MouseUp(MouseEventArgs args)
    {
        // User pressed mouse back
        //Console.WriteLine(JsonConvert.SerializeObject(args));
        if (args.Button == 3)
            AppData.NavigateUpOne();
        //if (args.Buttons == 4 || args.Buttons == 5)
        //    // Prevent default. This seems to be something that can only be done from js?
    }
}